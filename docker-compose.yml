version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-bullseye
    container_name: student-dashboard-db
    environment:
      POSTGRES_DB: student_dashboard_ctf
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Changed to 5433 to avoid conflict
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database Initialization
  db-init:
    build: .
    container_name: student-dashboard-db-init
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/student_dashboard_ctf
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'ðŸš€ Initializing database...' &&
        cd /app/server &&
        npx prisma migrate deploy &&
        npx prisma db seed &&
        echo 'âœ… Database initialized successfully!'
      "
    restart: "no"

  # Student Dashboard Application
  app:
    build: .
    container_name: student-dashboard-app
    ports:
      - "10009:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/student_dashboard_ctf
      - JWT_SECRET=supersecret_jwt_signing_key_
    depends_on:
      db-init:
        condition: service_completed_successfully
    volumes:
      - student-uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  student-uploads:
